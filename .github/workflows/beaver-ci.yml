name: Modern Multi-Module Build (Optimized)

on:
  push:
    branches:
      - 'master'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      modules: ${{ steps.set-matrix.outputs.modules }}

    steps:
      - uses: actions/checkout@v4

      - name: Detect Changed Modules
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            payment-service:
              - 'service/payment-service/**'
            user-service:
              - 'service/user-service/**'

      - name: Generate Dynamic Matrix
        id: set-matrix
        run: |
          echo "Start detecting modules..."
          modules=()
          if [[ "${{ steps.filter.outputs.payment-service }}" == 'true' ]]; then
            modules+=("\"payment-service\"")
          fi
          if [[ "${{ steps.filter.outputs.user-service }}" == 'true' ]]; then
            modules+=("\"user-service\"")
          fi

          if [ ${#modules[@]} -eq 0 ]; then
            echo "No module changed"
            echo "modules=[]" >> $GITHUB_OUTPUT
          else
            json="[$(IFS=,; echo "${modules[*]}")]"
            echo "Detected modules: $json"
            echo "modules=$json" >> $GITHUB_OUTPUT
          fi

  build-and-push:
    needs: detect-changes
    if: needs.detect-changes.outputs.modules != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: ${{ fromJson(needs.detect-changes.outputs.modules) }}

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      # Gradle 캐시 최적화
      - name: Cache Gradle files
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      # Buildx Builder 최신 세팅
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: image=moby/buildkit:latest

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant Execute Permission for gradlew
        run: chmod +x ./gradlew

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image with Cache
        uses: docker/build-push-action@v5
        with:
          context: ./
          push: true
          platforms: linux/arm64
          build-args: |
            MODULE=${{ matrix.module }}
          tags: |
            ghcr.io/${{ github.repository }}:${{ matrix.module }}-${{ github.sha }}
            ghcr.io/${{ github.repository }}:${{ matrix.module }}-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max