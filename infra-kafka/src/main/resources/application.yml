spring:
  application:
    name: infra-kafka
  config:
    import:
      optional:configserver:http://localhost:8888
  kafka:
    # Kafka ??? ?? ?? (????? ?? ??? ??)
    bootstrap-servers: localhost:9092,localhost:9093,localhost:9094

    # PRODUCER ?? (??? ???)
    producer:
      # ?/? ??? ??? ??
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

      # ??? ?? ??? ??
      acks: all  # all(?? ??? ??), 1(??? ??), 0(?? ??)
      retries: 3  # ?? ??? ??? ??

      # ?? ?? ?? ???
      batch-size: 16384  # ?? ?? (???), 16KB
      linger-ms: 5  # ?? ?? ?? (???), ?? vs ???? ??????
      buffer-memory: 33554432  # ?? ??? ?? (???), 32MB

      # ??? ?? ?? (???? ??? ??)
      compression-type: snappy  # none, gzip, snappy, lz4, zstd

      # ?? ???
      properties:
        # ??? ?? (?? ??? ??)
        enable.idempotence: true
        # ?? ?? ?? ? ?? (?? ??)
        max.in.flight.requests.per.connection: 5
        # ?? ???? (???)
        request.timeout.ms: 30000
        # ??? ?? ?? (???)
        max.request.size: 1048576  # 1MB

    # CONSUMER ?? (??? ???)
    consumer:
      # ??? ?? ID (?? ??? ???? ?? ??)
      group-id: ${spring.application.name}-consumer-group

      # ?/? ???? ??? ??
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer

      # ??? ?? ??
      auto-offset-reset: earliest  # earliest(????), latest(????), none(??)
      enable-auto-commit: true  # ?? ??? ?? ??
      auto-commit-interval-ms: 1000  # ?? ?? ?? (???)

      # ?? ? ???? ??
      session-timeout-ms: 30000  # ?? ???? (???)
      heartbeat-interval-ms: 3000  # ???? ?? (session-timeout? 1/3 ??)

      # ??? ?? ??
      max-poll-records: 500  # ? ?? ??? ?? ??? ?
      fetch-min-size: 1  # ?? ?? ?? (???)
      fetch-max-wait-ms: 500  # ?? ?? ?? (???)

      # ?? ???
      properties:
        # JSON ????? ??? ??? ?? (??)
        spring.json.trusted.packages: "com.example.dto,com.example.model"
        # ??? ?? ??
        max.partition.fetch.bytes: 1048576  # 1MB
        # ??? ?? ??
        isolation.level: read_committed  # read_uncommitted, read_committed

    # ===========================================
    # LISTENER ?? (??? ???)
    # ===========================================
    listener:
      # ??? ?? ??
      ack-mode: batch  # record(????), batch(???), time(???),
      # count(???), count_time(??+??),
      # manual(??), manual_immediate(?? ??)

      # ?? ?? ??? ??? ? (??? ??? ??? ????)
      concurrency: 3

      # ?? ???? (???)
      poll-timeout: 3000

      # ?? ?? ??
      missing-topics-fatal: false  # ??? ??? ?? ???? ??

      # ??? ??
      retry:
        topic:
          enabled: true  # ??? ?? ?? ??
          attempts: 3    # ??? ??
          delay: 1000    # ??? ?? (???)
          multiplier: 2.0  # ??? ?? ??

    # ===========================================
    # ??? ?? (?? ??/??)
    # ===========================================
    admin:
      properties:
        bootstrap.servers: localhost:9092
        # ?? ????
        request.timeout.ms: 30000
        # ?? ????
        connections.max.idle.ms: 300000

    # ===========================================
    # ?? ?? (SSL/SASL)
    # ===========================================
    security:
      protocol: PLAINTEXT  # PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL

    ssl:
#      # ???? ??? ?? (?? ??? ??)
#      trust-store-location: file:/Users/t8g-2410-pn-001/Documents/beaver/beaver/infra-kafka/keystore/kafka.client.truststore.jks
#      trust-store-password: 123456
#      trust-store-type: JKS

      # ? ??? ?? (????? ???)
      key-store-location: file:/Users/t8g-2410-pn-001/Documents/beaver/beaver/infra-kafka/keystore/kafka.client.keystore.jks
      key-store-password: 123456
      key-store-type: JKS
      key-password: 123456

      # SSL ???? ??
      protocol: TLSv1.2
      enabled-protocols: TLSv1.2,TLSv1.3

    # ===========================================
    # ?? ?? ??
    # ===========================================
    properties:
      # SASL ?? ??
      sasl.mechanism: PLAIN  # PLAIN, SCRAM-SHA-256, SCRAM-SHA-512, GSSAPI
      sasl.jaas.config: |
        org.apache.kafka.common.security.plain.PlainLoginModule required
        username="kafka-user"
        password="kafka-password";

      # ???? ?? ??
      connections.max.idle.ms: 540000  # ?? ?? ?? ?? (9?)
      reconnect.backoff.ms: 50  # ??? ??? ??
      retry.backoff.ms: 100     # ??? ??? ??

      # ????? ??
      metadata.max.age.ms: 300000  # ????? ?? ?? ?? (5?)

      # ????? ??
      client.id: ${spring.application.name}-${random.uuid}

#  # ===========================================
#  # ??? ?? ??
#  # ===========================================
#  ---
#  # ?? ??
#  spring:
#    config:
#      activate:
#        on-profile: dev
#    kafka:
#      bootstrap-servers: localhost:9092
#      # ??????? ?? ?? ?? ??
#
#  ---
#  # ?? ??
#  spring:
#    config:
#      activate:
#        on-profile: prod
#    kafka:
#      bootstrap-servers: ${KAFKA_BROKERS:prod-kafka1:9092,prod-kafka2:9092,prod-kafka3:9092}
#      # ??????? ?? ?? ??
#      security:
#        protocol: SASL_SSL
#      # ?? ??? ??
#      producer:
#        batch-size: 32768  # 32KB
#        linger-ms: 10
#        compression-type: lz4
#      consumer:
#        max-poll-records: 1000
#        fetch-min-size: 50000  # 50KB